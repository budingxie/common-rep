1.java事件机制包括哪三部分？分别介绍。
2.为什么要使用线程池
3.线程池有什么作用
4.说说几种常见的线程池及使用场景。
5.线程池都有哪几种工作队列。
6.怎么理解无界队列和有界队列？
7.线程池中的几种重要的参数及流程说明
8.什么是反射机制？
9.说说反射机制的作用。
10.反射机制会不会有性能问题？
11.你怎么理解http协议？
12.说说http协议的工作流程。
13.http有那些请求提交方式？
14.http中200，302，403，500，503都代表什么状态？
15.http get和post有什么区别？
16.你怎么理解cookie和session，有那些不同点
17.什么是web缓存？有那些优点？
18.什么是htpps，说说https的工作原理？
19.什么是http代理服务器，有什么用？
20.什么是虚拟主机及实现原理？
21.什么是Java虚拟机，为什么要使用？
22.说说Java虚拟机的生命周期及体系结构。
23.说一说Java内存区域。
24.什么是分布式系统
25.分布式系统你会考虑那些方面？
26.讲一讲TCP协议的三次握手和四次分手流程。
27.为什么TCP建立连接协议是三次握手，而关闭连接却是四次分手呢？为什么不能用两次握手进行连接？
28.为什么TCP TIME_WAIT状态还需要等待2MSL后才能返回到CLOSED状态？
29.什么是Dos、DDos、DRDos攻击？如何防御？
30.描述一下Java异常层次结构。
31.什么是检查异常，不受检查异常，运行时异常？并分别举例说明。
32.finally块一定会执行吗？
33.正常情况下，当try块或者catch块中遇到return语句时，finally语句块在方法返回之前还是之后被执行？
34.try、catch、finally语句块的执行顺序。
35.Java虚拟机中，数据类型可以分为哪几类？
36.怎么理解栈、堆？堆中存在什么？栈中存在什么？
37.为什么要把堆和栈区分出来呢？栈中不是也可以存储数据吗？
38.在Java中，什么是栈的起点，同时也是程序的起点？
39.为什么不把基本类型放在堆中呢？
40.Java中的参数传递时传值呢？还是传引用？
41.Java中有没有指针的概念？
42.Java中，栈的大小通过什么参数来设置呢？
43.一个空Object对象占多少空间？
44.对象引用类型分为哪几类？
45.讲一讲垃圾回收算法。
46.如何解决内存碎片的问题？
47.如何解决同时存在的对象创建和对象回收问题？
48.讲一讲内存分代及生命周期。
49.什么情况下触发垃圾回收？
50.如何选择合适的垃圾收集算法？
51.JVM中最大堆大小又没有限制？
52.堆大小通过什么参数设置？
53.JVM有哪三种垃圾回收器？
54.吞吐量优先选择什么垃圾回收器？响应时间优先呢？
55.如何进行JVM调优？有哪些方法？
56.如何理解内存泄漏问题？有那些情况会导致内存泄漏？如何解决？
57.从分布式系统部署角度考虑，分那几层？
58.如何解决业务层的数据访问问题？
59.为了解决数据库服务器的负担，如何做数据库的分布？
60.什么是著名的拜占庭将军问题？
61.为什么说TCP/IP协议是不可靠的？
62.讲讲CAP理念。
63.怎么理解强一致性问题？单调一致性和最终一致性？
64.分布式系统设计你会考虑那些策略？
65.最常见的数据分布方式是什么？
66.谈一谈一致性哈希算法。
67.paxos是什么
68.什么是Lease机制？
69.如何理解选主算法？
70.OSI有哪七层模型？TCP/IP是哪四层模型。
71.微信红包怎么实现。
72.海量数据分析。
73.测试职位问的线程安全和非线程安全。
74.HTTP2.0、thrift
75.面试电话沟通可能先让自我介绍。
76.分布式事务一致性。
77.nio的底层实现。
78.jvm基础是必问的，jvm gc原理，JVM怎么回收内存。
79.java是什么。
80.API接口于SDI接口的区别（API是提供给别人的接口）
81.dubbo如何一条链接并发多个调用。Dubbo的原理、序列化相关问题。
82.用过那些中间件。
83.做过工作流引擎没有。
84.以前工作经历，自己觉得出彩的地方（钉钉）
85.线程池的一些原理，锁的机制升降级（天猫、蚂蚁）
86.从系统层面考虑，分布式从那些维度考虑（天猫）
87.Hadoop底层怎么实现（天猫）
88.threadLocal、线程池、HashMap/HashTable/ConcurrentHashMap等（天猫）
89.秒杀系统的设计（天猫）
90.虚拟机、IO相关知识（天猫）
91.Linux的命令（天猫）
92.一个整型数组，给定一个数，在数组中找出两个数的和等于这个数，并打印出来，要求O(n)（天猫）
93.n个整数，找出连续m个数加和是最大的。（天猫）
94.更重视开源技术（蚂蚁）
95.数据库索引原理（蚂蚁）
96.1000个线程同时运行，怎么防止不卡。
97.并列的并发消费问题
98.高并发最大的话怎么处理热点数据等（蚂蚁）
99.如何获取一个本地服务器上可用端口
100.流量控制相关问题（蚂蚁）
101.数据库tps是多少，是否进行测试过（天猫）
102.缓存击穿有那些方案解决（天猫）
103.Java怎么挖取回收器相关原理（财富）
104.Java集合有哪些，都有什么特定。
105.分布式锁、redis缓存、spring aop、系统架构图、mysql的特点。
106.场景，同时给10万个人发工资，怎么设计并发方案，能确保在1分钟内全部发完（）


BEGIN;
DROP TABLE IF EXISTS logging_event_property;
DROP TABLE IF EXISTS logging_event_exception;
DROP TABLE IF EXISTS logging_event;
COMMIT;

BEGIN;
CREATE TABLE logging_event
  (
    timestmp         BIGINT NOT NULL,
    formatted_message  TEXT NOT NULL,
    logger_name       VARCHAR(254) NOT NULL,
    level_string      VARCHAR(254) NOT NULL,
    thread_name       VARCHAR(254),
    reference_flag    SMALLINT,
    arg0              VARCHAR(254),
    arg1              VARCHAR(254),
    arg2              VARCHAR(254),
    arg3              VARCHAR(254),
    caller_filename   VARCHAR(254) NOT NULL,
    caller_class      VARCHAR(254) NOT NULL,
    caller_method     VARCHAR(254) NOT NULL,
    caller_line       CHAR(4) NOT NULL,
    event_id          BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY
  );
COMMIT;

BEGIN;
CREATE TABLE logging_event_property
  (
    event_id          BIGINT NOT NULL,
    mapped_key        VARCHAR(254) NOT NULL,
    mapped_value      TEXT,
    PRIMARY KEY(event_id, mapped_key),
    FOREIGN KEY (event_id) REFERENCES logging_event(event_id)
  );
COMMIT;

BEGIN;
CREATE TABLE logging_event_exception
  (
    event_id         BIGINT NOT NULL,
    i                SMALLINT NOT NULL,
    trace_line       VARCHAR(254) NOT NULL,
    PRIMARY KEY(event_id, i),
    FOREIGN KEY (event_id) REFERENCES logging_event(event_id)
  );
COMMIT;